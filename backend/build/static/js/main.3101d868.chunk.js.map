{"version":3,"sources":["components/Note.js","services/notes.js","components/NOtification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setshowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","i","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportantOf","onSubmit","event","preventDefault","noteObject","date","Date","Math","random","concat","value","onChange","console","log","target","type","ReactDOM","render","document","getElementById"],"mappings":"8LAgBeA,G,MAbF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAC3B,OACE,gCACE,oBAAIC,UAAU,OAAd,SACGJ,EAAKK,UAER,wBAAQC,QAASL,EAAjB,SAAoCC,S,gBCVpCK,EAAU,aAoBD,EAlBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAgB9B,EAZA,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAU9B,EANA,SAACG,EAAIF,GAEhB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCF9BK,EAZM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OAAgB,OAAZA,EACO,KAIP,qBAAKd,UAAU,QAAf,SACKc,KCQEC,EAfA,WAOX,OACI,sBAAKC,MAPY,CACjBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAIV,UACI,uBACA,sGCkGGC,EAtGH,SAACC,GAAW,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,OAESF,mBAAS,IAFlB,mBAEdG,EAFc,KAELC,EAFK,OAGSJ,oBAAS,GAHlB,mBAGdK,EAHc,KAGLC,EAHK,OAImBN,mBAAS,MAJ5B,mBAIdO,EAJc,KAIAC,EAJA,KAMrBC,qBAAU,WACRC,IAEG1B,MAAK,SAAA2B,GACJT,EAASS,QAEZ,IAIH,IA4CMC,EAAcP,EAChBJ,EACAA,EAAMY,QAAO,SAAAvC,GAAI,OAAuB,IAAnBA,EAAKG,aAI9B,OACE,gCACE,uCAEA,cAAC,EAAD,CAAce,QAASe,IAEvB,8BACE,yBAAQ3B,QAAS,kBAAM0B,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAIlC,6BACGO,EAAYE,KAAI,SAACxC,EAAMyC,GAAP,OACf,cAAC,EAAD,CAEEzC,KAAMA,EACNC,iBAAkB,kBAnEF,SAAAc,GACxB,IAAMf,EAAO2B,EAAMe,MAAK,SAAAC,GAAC,OAAIA,EAAE5B,KAAOA,KAChC6B,EAAW,2BAAQ5C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDiC,EACUrB,EAAI6B,GACXlC,MAAK,SAAAmC,GACJjB,EAASD,EAAMa,KAAI,SAAAxC,GAAI,OAAIA,EAAKe,KAAOA,EAAKf,EAAO6C,SAEpDC,OAAM,SAAAC,GACLb,EAAgB,SAAD,OACJlC,EAAKK,QADD,sCAGf2C,YAAW,WACTd,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAI,GAAC,OAAIA,EAAE5B,KAAOA,SAmDRkC,CAAkBjD,EAAKe,MAF1C0B,QAOX,uBAAMS,SAnDM,SAAAC,GACdA,EAAMC,iBACN,IAAMC,EAAa,CACjBhD,QAASwB,EACTyB,KAAM,IAAIC,KACVpD,UAAWqD,KAAKC,SAAW,IAG7BrB,EACUiB,GACP3C,MAAK,SAAAmC,GACJjB,EAASD,EAAM+B,OAAOb,IACtBf,EAAW,QAuCb,UACE,uBACE6B,MAAO9B,EACP+B,SAtCiB,SAACT,GACxBU,QAAQC,IAAIX,EAAMY,OAAOJ,OACzB7B,EAAWqB,EAAMY,OAAOJ,UAsCpB,wBAAQK,KAAK,SAAb,qBAIF,cAAC,EAAD,QCtGNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3101d868.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n  return (\n    <div>\n      <li className='note'>\n        {note.content}\n      </li>\n      <button onClick={toggleImportance}>{label}</button>\n    </div>\n  )\n}\n\nexport default Note","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\n\nexport default { getAll, create, update }","import React from 'react'\n\n\nconst Notification = ({message}) => {\n    if (message === null){\n        return null\n    }\n\n    return (\n        <div className='error'>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React from 'react'\n\n\nconst Footer = () => {\n    const footerStyles = {\n        color: 'green',\n        fontStyle: 'italic',\n        fontSize: 16\n    }\n\n    return (\n        <div style={footerStyles}>\n            <br />\n            <em>Note app, Department of Computer Science, University of Helsinki</em>\n        </div>\n    )\n}\n\nexport default Footer","import React, { useState, useEffect } from 'react'\n// import axios from 'axios'\nimport './index.css'\nimport Note from './components/Note'\nimport noteService from './services/notes'\nimport Notification from './components/NOtification'\nimport Footer from './components/Footer'\n\n\nconst App = (props) => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setshowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n  // console.log('render', notes.length, 'notes')\n\n\n  const toggleImportantOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n\n  const addNote = event => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date(),\n      important: Math.random() < 0.5\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important === true)\n\n\n\n  return (\n    <div>\n      <h1>Notes</h1>\n\n      <Notification message={errorMessage} />\n\n      <div>\n        <button onClick={() => setshowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n\n      <ul>\n        {notesToShow.map((note, i) =>\n          <Note\n            key={i}\n            note={note}\n            toggleImportance={() => toggleImportantOf(note.id)}\n          />\n        )}\n      </ul>\n\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n\n\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n\n\n\n\n\n\n"],"sourceRoot":""}