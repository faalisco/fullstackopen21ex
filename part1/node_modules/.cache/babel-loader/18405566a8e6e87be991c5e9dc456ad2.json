{"ast":null,"code":"var _jsxFileName = \"/home/alhafithsidik/code/fullstackopen21ex/part1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; //Event Handling Revisited\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [value, setValue] = useState(10);\n\n  const hello = who => () => console.log('hello', who);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [value, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: hello('world'),\n      children: \"reset to zero\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: hello('react'),\n      children: \"reset to zero\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: hello('function'),\n      children: \"reset to zero\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}; // //conditional rendering \n// const History = (props) =>{\n//   if (props.allClicks.length === 0){\n//     return (\n//       <div>\n//         The app is used by pressing the buttons\n//       </div>\n//     )\n//   }\n//   return (\n//     <div>\n//       button press history: {props.allClicks.join(' ')}\n//     </div>\n//   )\n// }\n// const Button = ({handleClick, text}) => (\n//     <button onClick={handleClick}>\n//     {text}\n//   </button>\n// )\n// //rendering arrays\n// const App = () =>{\n//   const [left, setLeft] = useState(0)\n//   const [right, setRight] = useState(0)\n//   const [allClicks, setAll] = useState([])\n//   const handleLeftClick = () => {\n//     setAll(allClicks.concat('L'))\n//     setLeft(left + 1)\n//   }\n//   const handleRightClick = () => {\n//     setAll(allClicks.concat('R'))\n//     setRight(right + 1)\n//   }\n//   return (\n//     <div>\n//       {left}\n//       <Button handleClick={handleLeftClick} text='left' />\n//       <Button handleClick={handleRightClick} text='right' />\n//       {right}\n//       <History allClicks={allClicks} />\n//     </div>\n//   )\n// }\n// ///complex states\n// const App = () => {\n//   const [clicks, setClicks] = useState({\n//     left: 0,\n//     right: 0\n//   })\n//   const handleLeftClick = () => setClicks({\n//       ...clicks,\n//       left: clicks.left + 1\n//     })\n//   const handleRightClick = () => \n//     setClicks({\n//       ...clicks,\n//       right: clicks.right + 1\n//     })\n//   return(\n//     <div>\n//       {clicks.left}\n//       <button onClick={handleLeftClick}>left</button>\n//       <button onClick={handleRightClick}>right</button>\n//       {clicks.right}\n//     </div>\n//   )\n// }\n// const Display = ({counter}) => <div>{counter}</div>\n// const Button = ({ handleClick, text}) =>{\n//   return(\n//     <button onClick={handleClick}>\n//       {text}\n//     </button>\n//   )\n// }\n// const App = () => {\n//   const [counter, setCounter] = useState(0)\n//   const increaseByOne = () => setCounter(counter + 1)\n//   const decreaseByOne = () => setCounter(counter - 1)\n//   const setToZero = () => setCounter(0)\n//   /// complex states \n//   const {left, setLeft} = useState(0)\n//   const {right, setRight} = useState(0)\n//   return (\n//     <div>\n//       {left}\n//       <button onClick={() => setLeft(left + 1)}>\n//         left\n//       </button>\n//       <button onClick={() => setRight(right + 1)}>\n//         right\n//       </button>\n//       {right}\n//       <Display counter={counter} />\n//       <Button \n//         handleClick={increaseByOne}\n//         text='plus'\n//       />\n//       <Button \n//         handleClick={setToZero}\n//         text='zero'\n//       />\n//       <Button \n//         handleClick={decreaseByOne}\n//         text='minus'\n//       />\n//     </div>\n//   )\n// }\n// const Footer = () => {\n//   return (\n//     <div>\n//       greatings app created by <a href=\"https://github.com/faalisco\">faalisco</a>\n//     </div>\n//   )\n// }\n// const Hello = ({name, age}) => {\n//   const bornYear = () => new Date().getFullYear() - age\n//   return (\n//     <div>\n//       <p>\n//         Hello {name}, you are {age} years old\n//       </p>\n//       <p>So you were probally born in {bornYear()} </p>\n//     </div>\n//  )\n// }\n// const App = () =>{\n//   const name = 'Lamin'\n//   const age = '23'\n//  return (\n//   <>\n//     <h1>Greetings</h1>\n//     <Hello name=\"Maya\" age={26+10} />\n//     <Hello name={name} age={age} />\n//     <Footer />\n//   </>\n//  )\n// }\n\n\n_s(App, \"7UAQAh2ykPDdHAB4TCqEq4Uj1Jg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/alhafithsidik/code/fullstackopen21ex/part1/src/App.js"],"names":["React","useState","App","value","setValue","hello","who","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CAGA;;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMI,KAAK,GAAIC,GAAD,IAAS,MAAMC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB,CAA7B;;AAEA,sBACE;AAAA,eACGH,KADH,eAEE;AAAQ,MAAA,OAAO,EAAEE,KAAK,CAAC,OAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEA,KAAK,CAAC,OAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAEA,KAAK,CAAC,UAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAbD,C,CAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA4BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AA0BA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAnRMH,G;;KAAAA,G;AAqRN,eAAeA,GAAf","sourcesContent":["import React, {useState} from \"react\"\n\n\n//Event Handling Revisited\nconst App = () => {\n  const [value, setValue] = useState(10)\n\n  const hello = (who) => () => console.log('hello', who)\n\n  return (\n    <div>\n      {value}\n      <button onClick={hello('world')}>reset to zero</button>\n      <button onClick={hello('react')}>reset to zero</button>\n      <button onClick={hello('function')}>reset to zero</button>\n    </div>\n  )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// //conditional rendering \n// const History = (props) =>{\n//   if (props.allClicks.length === 0){\n//     return (\n//       <div>\n//         The app is used by pressing the buttons\n//       </div>\n//     )\n//   }\n//   return (\n//     <div>\n//       button press history: {props.allClicks.join(' ')}\n//     </div>\n//   )\n// }\n\n// const Button = ({handleClick, text}) => (\n//     <button onClick={handleClick}>\n//     {text}\n//   </button>\n// )\n\n// //rendering arrays\n// const App = () =>{\n//   const [left, setLeft] = useState(0)\n//   const [right, setRight] = useState(0)\n//   const [allClicks, setAll] = useState([])\n\n//   const handleLeftClick = () => {\n//     setAll(allClicks.concat('L'))\n//     setLeft(left + 1)\n//   }\n\n\n//   const handleRightClick = () => {\n//     setAll(allClicks.concat('R'))\n//     setRight(right + 1)\n//   }\n\n\n//   return (\n//     <div>\n//       {left}\n//       <Button handleClick={handleLeftClick} text='left' />\n//       <Button handleClick={handleRightClick} text='right' />\n//       {right}\n//       <History allClicks={allClicks} />\n//     </div>\n//   )\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// ///complex states\n// const App = () => {\n//   const [clicks, setClicks] = useState({\n//     left: 0,\n//     right: 0\n//   })\n\n//   const handleLeftClick = () => setClicks({\n//       ...clicks,\n//       left: clicks.left + 1\n//     })\n\n//   const handleRightClick = () => \n//     setClicks({\n//       ...clicks,\n//       right: clicks.right + 1\n//     })\n//   return(\n//     <div>\n//       {clicks.left}\n//       <button onClick={handleLeftClick}>left</button>\n//       <button onClick={handleRightClick}>right</button>\n//       {clicks.right}\n\n//     </div>\n//   )\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const Display = ({counter}) => <div>{counter}</div>\n\n// const Button = ({ handleClick, text}) =>{\n//   return(\n//     <button onClick={handleClick}>\n//       {text}\n//     </button>\n//   )\n// }\n\n\n\n// const App = () => {\n//   const [counter, setCounter] = useState(0)\n\n//   const increaseByOne = () => setCounter(counter + 1)\n//   const decreaseByOne = () => setCounter(counter - 1)\n//   const setToZero = () => setCounter(0)\n\n//   /// complex states \n//   const {left, setLeft} = useState(0)\n//   const {right, setRight} = useState(0)\n\n//   return (\n//     <div>\n      \n//       {left}\n//       <button onClick={() => setLeft(left + 1)}>\n//         left\n//       </button>\n\n//       <button onClick={() => setRight(right + 1)}>\n//         right\n//       </button>\n//       {right}\n\n//       <Display counter={counter} />\n\n//       <Button \n//         handleClick={increaseByOne}\n//         text='plus'\n//       />\n\n//       <Button \n//         handleClick={setToZero}\n//         text='zero'\n//       />\n\n//       <Button \n//         handleClick={decreaseByOne}\n//         text='minus'\n//       />\n\n//     </div>\n    \n//   )\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const Footer = () => {\n//   return (\n//     <div>\n//       greatings app created by <a href=\"https://github.com/faalisco\">faalisco</a>\n//     </div>\n//   )\n// }\n\n// const Hello = ({name, age}) => {\n//   const bornYear = () => new Date().getFullYear() - age\n//   return (\n//     <div>\n//       <p>\n//         Hello {name}, you are {age} years old\n//       </p>\n//       <p>So you were probally born in {bornYear()} </p>\n//     </div>\n//  )\n// }\n\n// const App = () =>{\n//   const name = 'Lamin'\n//   const age = '23'\n//  return (\n//   <>\n//     <h1>Greetings</h1>\n//     <Hello name=\"Maya\" age={26+10} />\n//     <Hello name={name} age={age} />\n//     <Footer />\n//   </>\n//  )\n// }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}